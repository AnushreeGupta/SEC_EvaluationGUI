package my_package;

import java.util.*;
//import static java.util.Collections.list;
//import static java.util.Collections.list;
//import java.util.HashMap;
//import java.util.List;
//import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
//import static jdk.nashorn.internal.objects.NativeArray.map;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ajay-Pc
 */
public class DataPage extends javax.swing.JFrame {

    /**
     * Creates new form DataPage2
     */
    int iter = 1;
    String inp;
    int number;
    int count=0;
    Map<String,List<Integer>> map = new HashMap<>();
    List<String> teamMembers = new ArrayList<>();
    List<Integer> newMarks = new ArrayList<>();
    List<List<Integer>> marks = new ArrayList<>();
    boolean flag;
    public DataPage() {
        initComponents();
    }

    DataPage(String input,boolean f) {
        flag = f;
        inp = input;
        number = Integer.parseInt(input);
        List<Integer> list = new ArrayList<>();
        list.add(5);list.add(4);list.add(3);
       
        teamMembers.add("Ajay Gandhi");
        teamMembers.add("Sidharth Pateriya");
        teamMembers.add("Hrishikessssssssssssssssssssssssssh");
        teamMembers.add("Ko");
        teamMembers.add("ABC");
        teamMembers.add("kBC");
        teamMembers.add("oBC");
        for(int i=0;i<number;i++)
        {
            map.put(teamMembers.get(i),list);
        }
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        enterButton = new javax.swing.JButton();
        infoLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        name4 = new javax.swing.JLabel();
        name6 = new javax.swing.JLabel();
        name5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        m1 = new javax.swing.JLabel();
        m2 = new javax.swing.JLabel();
        name2 = new javax.swing.JLabel();
        name3 = new javax.swing.JLabel();
        m4 = new javax.swing.JLabel();
        m6 = new javax.swing.JLabel();
        m3 = new javax.swing.JLabel();
        name1 = new javax.swing.JLabel();
        m5 = new javax.swing.JLabel();
        m7 = new javax.swing.JLabel();
        name7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel8 = new javax.swing.JLabel();
        teamMarks2 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        teamMarks1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        teamName = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        teamMarks = new javax.swing.JTextField();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Number of Team Mates = "+number);

        jLabel2.setFont(new java.awt.Font("Sitka Display", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 51, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        if(flag)
        jLabel2.setText("Fetching previous submission...");
        else
        jLabel2.setText("Enter Self and Peer Evaluation");

        enterButton.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        enterButton.setForeground(new java.awt.Color(0, 102, 102));
        enterButton.setText("Enter");
        enterButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        enterButton.setMaximumSize(new java.awt.Dimension(100, 100));
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        infoLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        infoLabel.setForeground(new java.awt.Color(0, 102, 102));
        infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        if(flag)
        infoLabel.setText("Update Marks for Teammate "+iter++);
        else
        infoLabel.setText("Enter Marks for Teammate "+iter++);

        name4.setVisible(false);
        name4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        name4.setForeground(new java.awt.Color(0, 153, 102));
        name4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name4.setText("Team Member 4");

        name6.setVisible(false);
        name6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        name6.setForeground(new java.awt.Color(0, 153, 102));
        name6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name6.setText("Team Member 6");

        name5.setVisible(false);
        name5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        name5.setForeground(new java.awt.Color(0, 153, 102));
        name5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name5.setText("Team Member 5");

        jLabel3.setVisible(false);
        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 153));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Name");

        jLabel4.setVisible(false);
        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 153));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Marks Obtained");

        m1.setVisible(false);
        m1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        m1.setForeground(new java.awt.Color(0, 153, 153));
        m1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m1.setText("Marks");

        m2.setVisible(false);
        m2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        m2.setForeground(new java.awt.Color(0, 153, 153));
        m2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m2.setText("Marks");

        name2.setVisible(false);
        name2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        name2.setForeground(new java.awt.Color(0, 153, 102));
        name2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name2.setText("Team Member 2");

        name3.setVisible(false);
        name3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        name3.setForeground(new java.awt.Color(0, 153, 102));
        name3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name3.setText("Team Member 3");

        m4.setVisible(false);
        m4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        m4.setForeground(new java.awt.Color(0, 153, 153));
        m4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m4.setText("Marks");

        m6.setVisible(false);
        m6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        m6.setForeground(new java.awt.Color(0, 153, 153));
        m6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m6.setText("Marks");

        m3.setVisible(false);
        m3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        m3.setForeground(new java.awt.Color(0, 153, 153));
        m3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m3.setText("Marks");

        name1.setVisible(false);
        name1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        name1.setForeground(new java.awt.Color(0, 153, 102));
        name1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name1.setText("Team Member 1");

        m5.setVisible(false);
        m5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        m5.setForeground(new java.awt.Color(0, 153, 153));
        m5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m5.setText("Marks");

        m7.setVisible(false);
        m7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        m7.setForeground(new java.awt.Color(0, 153, 153));
        m7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        m7.setText("Marks");

        name7.setVisible(false);
        name7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        name7.setForeground(new java.awt.Color(0, 153, 102));
        name7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name7.setText("Team Member 7");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(name3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(name2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(m1, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(name4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(name5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(name6, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(name7, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(m5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m6, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name1)
                    .addComponent(m1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name2)
                    .addComponent(m2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name3)
                    .addComponent(m3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name4)
                    .addComponent(m4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m5)
                    .addComponent(name5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m6)
                    .addComponent(name6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m7)
                    .addComponent(name7)))
        );

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 51));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Work Evaluation");

        if(flag)
        teamMarks2.setText(String.valueOf(map.get(teamMembers.get(0)).get(2)));
        else
        teamMarks2.setText("");
        teamMarks2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamMarks2ActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(teamMarks2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(teamMarks2, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(11, 11, 11)
                .addComponent(teamMarks2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        if(flag)
        teamMarks1.setText(String.valueOf(map.get(teamMembers.get(0)).get(1)));
        else
        teamMarks1.setText("");
        teamMarks1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamMarks1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Meeting Participation");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(teamMarks1)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(teamMarks1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        teamName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        teamName.setForeground(java.awt.Color.red);
        teamName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        teamName.setText(teamMembers.get(0));
        teamName.setMaximumSize(new java.awt.Dimension(100, 14));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Name");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teamName, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(teamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Professionalism");

        if(flag)
        teamMarks.setText(String.valueOf(map.get(teamMembers.get(0)).get(0)));
        teamMarks.setMaximumSize(new java.awt.Dimension(100, 100));
        if(!flag)
        teamMarks.setText("");
        teamMarks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamMarksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teamMarks, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(teamMarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1)
                .addGap(42, 42, 42))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void teamMarksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamMarksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teamMarksActionPerformed

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed

        if(flag){
        if(teamMarks.getText().equals("") || teamMarks1.getText().equals("") || teamMarks2.getText().equals(""))
            JOptionPane.showMessageDialog(this,"Enter some input (between 1 & 5) ");
             else if(Integer.parseInt(teamMarks.getText().trim())>5 || Integer.parseInt(teamMarks1.getText().trim())>5 || Integer.parseInt(teamMarks2.getText().trim())>5  ||Integer.parseInt(teamMarks.getText().trim())<0 || Integer.parseInt(teamMarks1.getText().trim())<0 || Integer.parseInt(teamMarks2.getText().trim())<0)
            JOptionPane.showMessageDialog(this,"Enter proper input (between 0 & 5) ");
            else
          {
        
        if(!enterButton.getText().equals("Calculate") && !enterButton.getText().equals("Calculate Pressed") && count<number)
        {
            System.out.println("Count " +count);
        infoLabel.setText("Update marks for Teammate "+iter++);
        int marks0 = Integer.parseInt(teamMarks.getText().trim());
        int marks1 = Integer.parseInt(teamMarks1.getText().trim());
        int marks2 = Integer.parseInt(teamMarks2.getText().trim());
        List<Integer> list = new ArrayList<>();//(Arrays.asList(marks,marks1,marks2));
        list.add(marks0);
        list.add(marks1);
        list.add(marks2);
        map.put(teamName.getText(),new ArrayList<Integer>(Arrays.asList(marks0,marks1,marks2)));
        marks.add(list);
        System.out.println("New Marks for "+teamMembers.get(count)+": "+map.get(teamMembers.get(count)).get(0)+" "+map.get(teamMembers.get(count)).get(1)+" "+map.get(teamMembers.get(count)).get(2));
            System.out.println("Marks: "+marks);
        }
        count++;
        if(!enterButton.getText().equals("Calculate") && !enterButton.getText().equals("Calculate Pressed") && count<number)
        {
        teamName.setText(teamMembers.get(count));
        teamMarks.setText(String.valueOf(map.get(teamMembers.get(count)).get(0)));
        teamMarks1.setText(String.valueOf(map.get(teamMembers.get(count)).get(1)));
        teamMarks2.setText(String.valueOf(map.get(teamMembers.get(count)).get(2)));
        
        }
        else if(!enterButton.getText().equals("Calculate") && !enterButton.getText().equals("Calculate Pressed"))
        {
            teamName.setText("Press Calculate Button to Calculate Marks");
            //teamMarks.remove(this);
            infoLabel.setVisible(false);
            teamMarks.setVisible(false);
            teamMarks1.setVisible(false);
            teamMarks2.setVisible(false);
            //teamMarks1.remove(this);
            //teamMarks2.remove(this);
            
//            teamMarks.setText("");
//            teamMarks1.setText("");
//            teamMarks2.setText("");
            enterButton.setText("Calculate");
        }
        else if(enterButton.getText().equals("Calculate"))
        {
        List<Integer> list2 = new ArrayList<>();
        list2.add(2);list2.add(5);list2.add(5);
        List<Integer> list3 = new ArrayList<>();
        list3.add(5);list3.add(5);list3.add(3);
        List<Integer> list4 = new ArrayList<>();
        list4.add(4);list4.add(4);list4.add(4);
        List<Integer> list5 = new ArrayList<>();
        list5.add(5);list5.add(5);list5.add(5);
        List<Integer> list6 = new ArrayList<>();
        list6.add(2);list6.add(2);list6.add(2);
        List<Integer> list7 = new ArrayList<>();
        list7.add(3);list7.add(2);list7.add(1);
        List<List<Integer>> marks2 = new ArrayList<>();
        marks2.add(list2);marks2.add(list2);marks2.add(list4);marks2.add(list7);marks2.add(list4);
        List<List<Integer>> marks3 = new ArrayList<>();
        marks3.add(list3);marks3.add(list3);marks3.add(list4);marks3.add(list7);marks3.add(list4);
        List<List<Integer>> marks4 = new ArrayList<>();
        marks4.add(list4);marks4.add(list4);marks4.add(list4);marks4.add(list6);marks4.add(list4);
        List<List<Integer>> marks5 = new ArrayList<>();
        marks5.add(list5);marks5.add(list6);marks5.add(list5);marks5.add(list6);marks5.add(list4);
            System.out.println("Marks"+marks);
            System.out.println("Marks2"+marks2);
            System.out.println("Marks3"+marks3);
            System.out.println("Marks4"+marks4);
            System.out.println("Marks5"+marks5);
            
            enterButton.setText("Calculate Pressed");
            
            //System.out.println("Marks"+marks);
            
            double initialMarksSum[] = new double[number];
            double finalMarks[] = new double[number];
            for(int j=0;j<number;j++)
            {
            for(int i=0;i<3;i++)
            {
                initialMarksSum[j]+=marks.get(j).get(i)+marks2.get(j).get(i)+marks3.get(j).get(i)+marks4.get(j).get(i)+marks5.get(j).get(i);
            }
            }
            double denom = 0.0;
            double projMarks = 90.0;
            for(int i=0;i<number;i++)
            {
                System.out.println("Total for "+(i+1)+" ="+initialMarksSum[i]);
                denom += initialMarksSum[i];
            }
            double[] fraction = new double[number];
            double totalFraction = 0.0;
            for(int i=0;i<number;i++)
                fraction[i]=initialMarksSum[i]/75.00;
            for(int i=0;i<number;i++)
                totalFraction += fraction[i];
            double totalProjMarks = projMarks*number;
            for(int i=0;i<number;i++)
                finalMarks[i]=(double)(fraction[i]/totalFraction)*totalProjMarks;
            StringBuilder sb = new StringBuilder();
            StringBuilder sb2 = new StringBuilder();
            
            for(int i=0;i<number;i++)
                sb.append(teamMembers.get(i)+"\n");
            for(int i=0;i<number;i++)
            {
                sb2.append(finalMarks[i]+"\n");
                System.out.println("Marks for "+(i+1)+" ="+finalMarks[i]);
            }
           switch(number)
           {
               case 2:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   break;
               case 3:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   name3.setText(teamMembers.get(2));
                   name3.setVisible(true);m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   m3.setText(String.valueOf(finalMarks[2]));
                   m3.setVisible(true);
                   break;
               case 4:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   name3.setText(teamMembers.get(2));
                   name3.setVisible(true);
                   name4.setText(teamMembers.get(3));
                   name4.setVisible(true);m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   m3.setText(String.valueOf(finalMarks[2]));
                   m3.setVisible(true);
                   m4.setText(String.valueOf(finalMarks[3]));
                   m4.setVisible(true);
                   break;
               case 5:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   name3.setText(teamMembers.get(2));
                   name3.setVisible(true);
                   name4.setText(teamMembers.get(3));
                   name4.setVisible(true);
                   name5.setText(teamMembers.get(4));
                   name5.setVisible(true);
                   m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   m3.setText(String.valueOf(finalMarks[2]));
                   m3.setVisible(true);
                   m4.setText(String.valueOf(finalMarks[3]));
                   m4.setVisible(true);
                   m5.setText(String.valueOf(finalMarks[4]));
                   m5.setVisible(true);
                   break;
               case 6:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   name3.setText(teamMembers.get(2));
                   name3.setVisible(true);
                   name4.setText(teamMembers.get(3));
                   name4.setVisible(true);
                   name5.setText(teamMembers.get(4));
                   name5.setVisible(true);
                   name6.setText(teamMembers.get(5));
                   name6.setVisible(true);
                   m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   m3.setText(String.valueOf(finalMarks[2]));
                   m3.setVisible(true);
                   m4.setText(String.valueOf(finalMarks[3]));
                   m4.setVisible(true);
                   m5.setText(String.valueOf(finalMarks[4]));
                   m5.setVisible(true);
                   m6.setText(String.valueOf(finalMarks[5]));
                   m6.setVisible(true);
                   break;
               case 7:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   name3.setText(teamMembers.get(2));
                   name3.setVisible(true);
                   name4.setText(teamMembers.get(3));
                   name4.setVisible(true);
                   name5.setText(teamMembers.get(4));
                   name5.setVisible(true);
                   name6.setText(teamMembers.get(5));
                   name6.setVisible(true);
                   name7.setText(teamMembers.get(6));
                   name7.setVisible(true);
                   m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   m3.setText(String.valueOf(finalMarks[2]));
                   m3.setVisible(true);
                   m4.setText(String.valueOf(finalMarks[3]));
                   m4.setVisible(true);
                   m5.setText(String.valueOf(finalMarks[4]));
                   m5.setVisible(true);
                   m6.setText(String.valueOf(finalMarks[5]));
                   m6.setVisible(true);
                   m7.setText(String.valueOf(finalMarks[6]));
                   m7.setVisible(true);
                   break;
           }
            jLabel3.setVisible(true);
            jLabel4.setVisible(true);
        }
          }
        }
        else
        {
            if(teamMarks.getText().equals("") || teamMarks1.getText().equals("") || teamMarks2.getText().equals(""))
            JOptionPane.showMessageDialog(this,"Enter some input (between 0 & 5) ");
        else if(Integer.parseInt(teamMarks.getText().trim())>5 || Integer.parseInt(teamMarks1.getText().trim())>5 || Integer.parseInt(teamMarks2.getText().trim())>5  ||Integer.parseInt(teamMarks.getText().trim())<0 || Integer.parseInt(teamMarks1.getText().trim())<0 || Integer.parseInt(teamMarks2.getText().trim())<0)
            JOptionPane.showMessageDialog(this,"Enter proper input (between 0 & 5) ");    
        else
          {
        
        if(!enterButton.getText().equals("Calculate") && !enterButton.getText().equals("Calculate Pressed") && count<number)
        {
          
              System.out.println("Count " +count);
        infoLabel.setText("Enter marks for Teammate "+(count+2));
        
        
        int marks0 = Integer.parseInt(teamMarks.getText().trim());
        int marks1 = Integer.parseInt(teamMarks1.getText().trim());
        int marks2 = Integer.parseInt(teamMarks2.getText().trim());
        List<Integer> list = new ArrayList<>();//(Arrays.asList(marks,marks1,marks2));
        list.add(marks0);
        list.add(marks1);
        list.add(marks2);
        map.put(teamName.getText(),new ArrayList<Integer>(Arrays.asList(marks0,marks1,marks2)));
        marks.add(list);
        System.out.println("New Marks for "+teamMembers.get(count)+": "+map.get(teamMembers.get(count)).get(0)+" "+map.get(teamMembers.get(count)).get(1)+" "+map.get(teamMembers.get(count)).get(2));
            System.out.println("Marks: "+marks);
        }
        count++;
        if(!enterButton.getText().equals("Calculate") && !enterButton.getText().equals("Calculate Pressed") && count<number)
        {
        teamName.setText(teamMembers.get(count));
        
        teamMarks.setText("");
        teamMarks1.setText("");
        teamMarks2.setText("");
        //teamMarks1.setText(String.valueOf(map.get(teamMembers.get(count)).get(1)));
        //teamMarks2.setText(String.valueOf(map.get(teamMembers.get(count)).get(2)));
        }
        
        else if(!enterButton.getText().equals("Calculate") && !enterButton.getText().equals("Calculate Pressed"))
        {
            teamName.setText("Press Calculate Button to Calculate Marks");
            //teamMarks.remove(this);
            infoLabel.setVisible(false);
            teamMarks.setVisible(false);
            teamMarks1.setVisible(false);
            teamMarks2.setVisible(false);
            //teamMarks1.remove(this);
            //teamMarks2.remove(this);
            
//            teamMarks.setText("");
//            teamMarks1.setText("");
//            teamMarks2.setText("");
            enterButton.setText("Calculate");
        }else if(enterButton.getText().equals("Calculate"))
        {
        List<Integer> list2 = new ArrayList<>();
        list2.add(2);list2.add(5);list2.add(5);
        List<Integer> list3 = new ArrayList<>();
        list3.add(5);list3.add(5);list3.add(3);
        List<Integer> list4 = new ArrayList<>();
        list4.add(4);list4.add(4);list4.add(4);
        List<Integer> list5 = new ArrayList<>();
        list5.add(5);list5.add(5);list5.add(5);
        List<Integer> list6 = new ArrayList<>();
        list6.add(2);list6.add(2);list6.add(2);
        List<Integer> list7 = new ArrayList<>();
        list7.add(3);list7.add(2);list7.add(1);
        List<List<Integer>> marks2 = new ArrayList<>();
        marks2.add(list2);marks2.add(list2);marks2.add(list4);marks2.add(list7);marks2.add(list4);
        List<List<Integer>> marks3 = new ArrayList<>();
        marks3.add(list3);marks3.add(list3);marks3.add(list4);marks3.add(list7);marks3.add(list4);
        List<List<Integer>> marks4 = new ArrayList<>();
        marks4.add(list4);marks4.add(list4);marks4.add(list4);marks4.add(list6);marks4.add(list4);
        List<List<Integer>> marks5 = new ArrayList<>();
        marks5.add(list5);marks5.add(list6);marks5.add(list5);marks5.add(list6);marks5.add(list4);
            System.out.println("Marks"+marks);
            System.out.println("Marks2"+marks2);
            System.out.println("Marks3"+marks3);
            System.out.println("Marks4"+marks4);
            System.out.println("Marks5"+marks5);
            
            enterButton.setText("Calculate Pressed");
            
            //System.out.println("Marks"+marks);
            
            double initialMarksSum[] = new double[number];
            double finalMarks[] = new double[number];
            for(int j=0;j<number;j++)
            {
            for(int i=0;i<3;i++)
            {
                initialMarksSum[j]+=marks.get(j).get(i)+marks2.get(j).get(i)+marks3.get(j).get(i)+marks4.get(j).get(i)+marks5.get(j).get(i);
            }
            }
            double denom = 0.0;
            double projMarks = 90.0;
            for(int i=0;i<number;i++)
            {
                System.out.println("Total for "+(i+1)+" ="+initialMarksSum[i]);
                denom += initialMarksSum[i];
            }
            double[] fraction = new double[number];
            double totalFraction = 0.0;
            for(int i=0;i<number;i++)
                fraction[i]=initialMarksSum[i]/75.00;
            for(int i=0;i<number;i++)
                totalFraction += fraction[i];
            double totalProjMarks = projMarks*number;
            for(int i=0;i<number;i++)
                finalMarks[i]=(double)(fraction[i]/totalFraction)*totalProjMarks;
            StringBuilder sb = new StringBuilder();
            StringBuilder sb2 = new StringBuilder();
            
            for(int i=0;i<number;i++)
                sb.append(teamMembers.get(i)+"\n");
            for(int i=0;i<number;i++)
            {
                sb2.append(finalMarks[i]+"\n");
                System.out.println("Marks for "+(i+1)+" ="+finalMarks[i]);
            }
           switch(number)
           {
               case 2:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   break;
               case 3:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   name3.setText(teamMembers.get(2));
                   name3.setVisible(true);m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   m3.setText(String.valueOf(finalMarks[2]));
                   m3.setVisible(true);
                   break;
               case 4:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   name3.setText(teamMembers.get(2));
                   name3.setVisible(true);
                   name4.setText(teamMembers.get(3));
                   name4.setVisible(true);m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   m3.setText(String.valueOf(finalMarks[2]));
                   m3.setVisible(true);
                   m4.setText(String.valueOf(finalMarks[3]));
                   m4.setVisible(true);
                   break;
               case 5:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   name3.setText(teamMembers.get(2));
                   name3.setVisible(true);
                   name4.setText(teamMembers.get(3));
                   name4.setVisible(true);
                   name5.setText(teamMembers.get(4));
                   name5.setVisible(true);
                   m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   m3.setText(String.valueOf(finalMarks[2]));
                   m3.setVisible(true);
                   m4.setText(String.valueOf(finalMarks[3]));
                   m4.setVisible(true);
                   m5.setText(String.valueOf(finalMarks[4]));
                   m5.setVisible(true);
                   break;
               case 6:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   name3.setText(teamMembers.get(2));
                   name3.setVisible(true);
                   name4.setText(teamMembers.get(3));
                   name4.setVisible(true);
                   name5.setText(teamMembers.get(4));
                   name5.setVisible(true);
                   name6.setText(teamMembers.get(5));
                   name6.setVisible(true);
                   m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   m3.setText(String.valueOf(finalMarks[2]));
                   m3.setVisible(true);
                   m4.setText(String.valueOf(finalMarks[3]));
                   m4.setVisible(true);
                   m5.setText(String.valueOf(finalMarks[4]));
                   m5.setVisible(true);
                   m6.setText(String.valueOf(finalMarks[5]));
                   m6.setVisible(true);
                   break;
               case 7:
                   name1.setText(teamMembers.get(0));
                   name1.setVisible(true);
                   name2.setText(teamMembers.get(1));
                   name2.setVisible(true);
                   name3.setText(teamMembers.get(2));
                   name3.setVisible(true);
                   name4.setText(teamMembers.get(3));
                   name4.setVisible(true);
                   name5.setText(teamMembers.get(4));
                   name5.setVisible(true);
                   name6.setText(teamMembers.get(5));
                   name6.setVisible(true);
                   name7.setText(teamMembers.get(6));
                   name7.setVisible(true);
                   m1.setText(String.valueOf(finalMarks[0]));
                   m1.setVisible(true);
                   m2.setText(String.valueOf(finalMarks[1]));
                   m2.setVisible(true);
                   m3.setText(String.valueOf(finalMarks[2]));
                   m3.setVisible(true);
                   m4.setText(String.valueOf(finalMarks[3]));
                   m4.setVisible(true);
                   m5.setText(String.valueOf(finalMarks[4]));
                   m5.setVisible(true);
                   m6.setText(String.valueOf(finalMarks[5]));
                   m6.setVisible(true);
                   m7.setText(String.valueOf(finalMarks[6]));
                   m7.setVisible(true);
                   break;
           }
            jLabel3.setVisible(true);
            jLabel4.setVisible(true);
        }
          }
        }
    }//GEN-LAST:event_enterButtonActionPerformed

    private void teamMarks1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamMarks1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teamMarks1ActionPerformed

    private void teamMarks2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamMarks2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teamMarks2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton enterButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel m1;
    private javax.swing.JLabel m2;
    private javax.swing.JLabel m3;
    private javax.swing.JLabel m4;
    private javax.swing.JLabel m5;
    private javax.swing.JLabel m6;
    private javax.swing.JLabel m7;
    private javax.swing.JLabel name1;
    private javax.swing.JLabel name2;
    private javax.swing.JLabel name3;
    private javax.swing.JLabel name4;
    private javax.swing.JLabel name5;
    private javax.swing.JLabel name6;
    private javax.swing.JLabel name7;
    private javax.swing.JTextField teamMarks;
    private javax.swing.JTextField teamMarks1;
    private javax.swing.JTextField teamMarks2;
    private javax.swing.JLabel teamName;
    // End of variables declaration//GEN-END:variables
}
